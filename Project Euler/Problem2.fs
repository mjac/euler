module Euler.Problems.Problem2

(*
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not exceed four million.

What it says on the tin. Go through the entire sequence. Every third number is even so the 
number of calculations can be reduced if you consider multiplication a constant time operation.
*)

let sumFibLimited max =
    let rec sumFib l r t =
        if (l > max) then t else sumFib r (l+r) (if l % 2 = 0 then (t+l) else t)
    in sumFib 1 1 0
